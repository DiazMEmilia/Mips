--
-- Generated by VASY
--
ENTITY ctrl_fsm IS
PORT(
  clk	: IN BIT;
  reset	: IN BIT;
  opcode	: IN BIT_VECTOR(5 DOWNTO 0);
  iord	: OUT BIT;
  irwrite	: OUT BIT;
  regdst	: OUT BIT;
  memtoreg	: OUT BIT;
  regwrite	: OUT BIT;
  alusrca	: OUT BIT;
  alusrcb	: OUT BIT_VECTOR(1 DOWNTO 0);
  aluop	: OUT BIT_VECTOR(1 DOWNTO 0);
  pcsrc	: OUT BIT_VECTOR(1 DOWNTO 0);
  pcwrite	: OUT BIT;
  branch	: OUT BIT;
  memwrite	: OUT BIT;
  state	: OUT BIT_VECTOR(3 DOWNTO 0);
  vdd	: IN BIT;
  vss	: IN BIT
);
END ctrl_fsm;

ARCHITECTURE VBE OF ctrl_fsm IS

  SIGNAL rtlalc_15	: REG_VECTOR(3 DOWNTO 0) REGISTER;
  SIGNAL rtlalc_14	: REG_BIT REGISTER;
  SIGNAL rtlalc_13	: REG_BIT REGISTER;
  SIGNAL rtlalc_12	: REG_BIT REGISTER;
  SIGNAL rtlalc_11	: REG_BIT REGISTER;
  SIGNAL rtlalc_10	: REG_BIT REGISTER;
  SIGNAL rtlalc_9	: REG_BIT REGISTER;
  SIGNAL rtlalc_8	: REG_BIT REGISTER;
  SIGNAL rtlalc_7	: REG_BIT REGISTER;
  SIGNAL rtlalc_6	: REG_BIT REGISTER;
  SIGNAL rtlalc_5	: REG_BIT REGISTER;
  SIGNAL rtlalc_4	: REG_BIT REGISTER;
  SIGNAL rtlalc_3	: REG_BIT REGISTER;
  SIGNAL rtlalc_2	: REG_BIT REGISTER;
  SIGNAL rtlalc_1	: REG_BIT REGISTER;
  SIGNAL rtlalc_0	: REG_BIT REGISTER;
  SIGNAL rtldef_1	: BIT;
  SIGNAL rtldef_0	: BIT;
  SIGNAL nextstate	: REG_VECTOR(3 DOWNTO 0) REGISTER;
  SIGNAL p43_1_def_8	: BIT;
  SIGNAL p43_1_def_7	: BIT;
  SIGNAL p43_1_def_6	: BIT;
  SIGNAL p43_1_def_5	: BIT;
  SIGNAL p43_1_def_1	: BIT;
BEGIN

  state <= rtlalc_15;
  iord <= rtlalc_14;
  alusrca <= rtlalc_13;
  alusrcb(0) <= rtlalc_12;
  alusrcb(1) <= rtlalc_11;
  aluop(0) <= rtlalc_10;
  aluop(1) <= rtlalc_9;
  pcsrc(0) <= rtlalc_8;
  pcsrc(1) <= rtlalc_7;
  irwrite <= rtlalc_6;
  pcwrite <= rtlalc_5;
  regwrite <= rtlalc_4;
  memwrite <= rtlalc_3;
  branch <= rtlalc_2;
  regdst <= rtlalc_1;
  memtoreg <= rtlalc_0;
  LABEL0 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_0 <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND nextstate(2) AND 
NOT(nextstate(3))) ELSE
     '0' WHEN (NOT(reset) AND ((nextstate(0) AND nextstate(1) AND nextstate(2) AND NOT(nextstate(3)
)) OR (NOT(nextstate(0)) AND nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
))) ELSE rtlalc_0;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_1 <= GUARDED '1' WHEN (NOT(reset) AND nextstate(0) AND nextstate(1) AND nextstate(2) AND NOT(nextstate(3)
)) ELSE
     '0' WHEN (NOT(reset) AND NOT(nextstate(0)) AND ((nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
) OR (NOT(nextstate(1)) AND nextstate(2) AND NOT(nextstate(3))))) ELSE rtlalc_1;
  END BLOCK LABEL1;
  LABEL2 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_2 <= GUARDED '0' WHEN reset ELSE
     nextstate(3) WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2))) ELSE rtlalc_2;
  END BLOCK LABEL2;
  LABEL3 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_3 <= GUARDED '1' WHEN (NOT(reset) AND nextstate(0) AND NOT(nextstate(1)) AND nextstate(2) AND NOT(nextstate(3)
)) ELSE
     '0' WHEN (reset OR (NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND 
NOT(nextstate(3)))) ELSE rtlalc_3;
  END BLOCK LABEL3;
  LABEL4 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_4 <= GUARDED '1' WHEN (NOT(reset) AND ((nextstate(0) AND nextstate(1) AND nextstate(2) AND NOT(nextstate(3)
)) OR (NOT(nextstate(0)) AND ((nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
) OR (NOT(nextstate(1)) AND nextstate(2) AND NOT(nextstate(3))))))) ELSE
     '0' WHEN (reset OR (NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND 
NOT(nextstate(3)))) ELSE rtlalc_4;
  END BLOCK LABEL4;
  LABEL5 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_5 <= GUARDED '1' WHEN (NOT(reset) AND ((nextstate(0) AND nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
) OR (NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3)
)))) ELSE
     '0' WHEN (reset OR (nextstate(0) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3)
))) ELSE rtlalc_5;
  END BLOCK LABEL5;
  LABEL6 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_6 <= GUARDED '0' WHEN reset ELSE
     NOT(nextstate(0)) WHEN (NOT(reset) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3))) ELSE rtlalc_6;
  END BLOCK LABEL6;
  LABEL7 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_7 <= GUARDED '1' WHEN (NOT(reset) AND nextstate(0) AND nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
) ELSE
     '0' WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2))) ELSE rtlalc_7;
  END BLOCK LABEL7;
  LABEL8 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_8 <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) 
AND nextstate(3)) ELSE
     '0' WHEN (NOT(reset) AND ((nextstate(0) AND nextstate(1) AND NOT(nextstate(2)) AND nextstate(3)
) OR (NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3)
)))) ELSE rtlalc_8;
  END BLOCK LABEL8;
  LABEL9 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_9 <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(0)) AND nextstate(1) AND nextstate(2) AND NOT(nextstate(3)
)) ELSE
     '0' WHEN (NOT(reset) AND ((NOT(nextstate(1)) AND NOT(nextstate(2))) OR (NOT(nextstate(0)
) AND ((NOT(nextstate(2)) AND NOT(nextstate(3))) OR (NOT(nextstate(1)) AND NOT(nextstate(2)
)))))) ELSE rtlalc_9;
  END BLOCK LABEL9;
  LABEL10 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_10 <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) 
AND nextstate(3)) ELSE
     '0' WHEN (NOT(reset) AND ((nextstate(0) AND NOT(nextstate(1)) AND NOT(nextstate(2))) OR 
(NOT(nextstate(0)) AND (nextstate(1) OR NOT(nextstate(2))) AND NOT(nextstate(3))
))) ELSE rtlalc_10;
  END BLOCK LABEL10;
  LABEL11 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_11 <= GUARDED '1' WHEN (NOT(reset) AND ((nextstate(0) AND NOT(nextstate(1)) AND NOT(nextstate(2))) OR 
(NOT(nextstate(0)) AND nextstate(1) AND NOT(nextstate(2)) AND NOT(nextstate(3)))
)) ELSE
     '0' WHEN (NOT(reset) AND NOT(nextstate(0)) AND ((nextstate(1) AND nextstate(2) AND NOT(nextstate(3)
)) OR (NOT(nextstate(1)) AND NOT(nextstate(2))))) ELSE rtlalc_11;
  END BLOCK LABEL11;
  LABEL12 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_12 <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3))) ELSE
     '0' WHEN (NOT(reset) AND ((NOT(nextstate(1)) AND NOT(nextstate(2)) AND nextstate(3)) OR 
(NOT(nextstate(0)) AND ((nextstate(1) AND NOT(nextstate(3))) OR (NOT(nextstate(1)
) AND NOT(nextstate(2)) AND nextstate(3)))))) ELSE rtlalc_12;
  END BLOCK LABEL12;
  LABEL13 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_13 <= GUARDED '1' WHEN (NOT(reset) AND ((NOT(nextstate(1)) AND NOT(nextstate(2)) AND nextstate(3)) OR 
(NOT(nextstate(0)) AND ((nextstate(1) AND NOT(nextstate(3))) OR (NOT(nextstate(1)
) AND NOT(nextstate(2)) AND nextstate(3)))))) ELSE
     '0' WHEN (NOT(reset) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3))) ELSE rtlalc_13;
  END BLOCK LABEL13;
  LABEL14 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_14 <= GUARDED '1' WHEN (NOT(reset) AND nextstate(0) AND (nextstate(2) XOR nextstate(1)) AND NOT(nextstate(3)
)) ELSE
     '0' WHEN (NOT(reset) AND NOT(nextstate(0)) AND NOT(nextstate(1)) AND NOT(nextstate(2)) 
AND NOT(nextstate(3))) ELSE rtlalc_14;
  END BLOCK LABEL14;
  LABEL15 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    nextstate(3) <= GUARDED '1' WHEN (NOT(reset) AND nextstate(0) AND NOT(nextstate(1)) AND NOT(nextstate(2)) AND 
NOT(opcode(0) AND opcode(1) AND NOT(opcode(2)) AND NOT(opcode(4)) AND opcode(5)) 
AND (p43_1_def_6 OR p43_1_def_8 OR p43_1_def_7) AND NOT(p43_1_def_5)) ELSE
     '0' WHEN (reset OR NOT(nextstate(0)) OR nextstate(1) OR nextstate(2)) ELSE nextstate(3);
  END BLOCK LABEL15;
  LABEL16 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    nextstate(2) <= GUARDED '1' WHEN (NOT(reset) AND NOT(nextstate(0)) AND nextstate(1) AND NOT(nextstate(3)) AND opcode(0)
 AND opcode(3) AND opcode(1) AND NOT(opcode(2)) AND NOT(opcode(4)) AND opcode(5)
) ELSE
     '0' WHEN (reset OR nextstate(3) OR (NOT(nextstate(1)) AND (nextstate(3) OR (opcode(0) 
AND opcode(1) AND NOT(opcode(2)) AND NOT(opcode(4)) AND opcode(5)))) OR (NOT(nextstate(0)
) AND (NOT(nextstate(1)) OR nextstate(3)))) ELSE
     ((NOT(nextstate(2)) AND p43_1_def_5) OR (nextstate(1) AND NOT(nextstate(2)))) WHEN (NOT(reset) AND nextstate(0) AND ((NOT(nextstate(3)) AND (NOT(opcode(0)) OR NOT
(opcode(1)) OR opcode(2) OR opcode(4) OR NOT(opcode(5)))) OR (nextstate(1) AND 
NOT(nextstate(3))))) ELSE nextstate(2);
  END BLOCK LABEL16;
  LABEL17 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    nextstate(1) <= GUARDED '0' WHEN (reset OR (nextstate(0) AND nextstate(2)) OR (NOT(nextstate(0)) AND (nextstate(3)
 OR (NOT(nextstate(2)) AND (nextstate(3) OR (opcode(0) AND opcode(1) AND opcode(3)
 AND NOT(opcode(2)) AND NOT(opcode(4)) AND opcode(5))))))) ELSE
     (NOT(nextstate(1)) AND (nextstate(3) OR (opcode(0) AND opcode(1) AND NOT(opcode(2)
) AND NOT(opcode(4)) AND opcode(5)) OR (p43_1_def_8 AND NOT(p43_1_def_6) AND NOT
(p43_1_def_7)) OR p43_1_def_5)) WHEN (NOT(reset) AND nextstate(0) AND NOT(nextstate(2))) ELSE nextstate(1);
  END BLOCK LABEL17;
  LABEL18 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    nextstate(0) <= GUARDED (NOT(p43_1_def_1) AND ((NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3)
) AND NOT(((opcode = "100011") OR (opcode = "101011"))) AND NOT(p43_1_def_6) AND
 NOT(p43_1_def_5)) OR (NOT(nextstate(0)) AND ((nextstate(1) AND ((NOT(nextstate(3)
) AND ((opcode = "100011") OR (opcode = "101011"))) OR (nextstate(2) AND NOT(nextstate(3)
)))) OR (NOT(nextstate(1)) AND NOT(nextstate(2)) AND NOT(nextstate(3)))))));
  END BLOCK LABEL18;
  LABEL19 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    rtlalc_15 <= GUARDED (((rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0) AND nextstate) OR (rtldef_1 & rtldef_1
 & rtldef_1 & rtldef_1));
  END BLOCK LABEL19;
  p43_1_def_8 <= (opcode = "000010");
  p43_1_def_7 <= (opcode = "001000");
  p43_1_def_6 <= (opcode = "000100");
  p43_1_def_5 <= (opcode = "000000");
  rtldef_1 <= '1' WHEN p43_1_def_1 ELSE
     '0';
  rtldef_0 <= '1' WHEN NOT(p43_1_def_1) ELSE
     '0';
  p43_1_def_1 <= (reset = '1');
END VBE;
