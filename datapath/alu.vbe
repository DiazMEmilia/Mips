--
-- Generated by VASY
--
ENTITY alu IS
PORT(
  a	: IN BIT_VECTOR(31 DOWNTO 0);
  b	: IN BIT_VECTOR(31 DOWNTO 0);
  ctrl	: IN BIT_VECTOR(2 DOWNTO 0);
  res	: OUT BIT_VECTOR(31 DOWNTO 0);
  zero	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END alu;

ARCHITECTURE VBE OF alu IS

  SIGNAL rtlsum_1	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlcarry_1	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlsum_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtl_internal_res	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL rtlexts_0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_add	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_sub	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_and	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_or	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_andnot	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL res_ornot	: BIT_VECTOR(31 DOWNTO 0);
BEGIN

  rtlcarry_1(0) <= '0';
  rtlsum_1 <= ((a XOR b) XOR rtlcarry_1);
  rtlcarry_1(31 downto 1) <= (((a(30 downto 0) AND b(30 downto 0)) OR (a(30 downto 0) AND rtlcarry_1(30 downto 0)
)) OR (b(30 downto 0) AND rtlcarry_1(30 downto 0)));
  rtlcarry_0(0) <= '1';
  rtlsum_0 <= ((a XOR NOT(b)) XOR rtlcarry_0);
  rtlcarry_0(31 downto 1) <= (((a(30 downto 0) AND NOT(b(30 downto 0))) OR (a(30 downto 0) AND rtlcarry_0(30 downto 0)
)) OR (NOT(b(30 downto 0)) AND rtlcarry_0(30 downto 0)));
  res <= rtl_internal_res;
  rtlexts_0 <= ("0000000000000000000000000000000" & res_sub(31));
  zero <= '1' WHEN (rtl_internal_res = "00000000000000000000000000000000") ELSE
     '0';
  rtl_internal_res <= rtlexts_0 WHEN ((ctrl(0) AND ctrl(1) AND ctrl(2)) = '1') ELSE
     res_sub WHEN ((NOT(ctrl(0)) AND ctrl(1) AND ctrl(2)) = '1') ELSE
     res_ornot WHEN ((ctrl(0) AND NOT(ctrl(1)) AND ctrl(2)) = '1') ELSE
     res_andnot WHEN ((NOT(ctrl(0)) AND NOT(ctrl(1)) AND ctrl(2)) = '1') ELSE
     res_add WHEN ((NOT(ctrl(0)) AND ctrl(1) AND NOT(ctrl(2))) = '1') ELSE
     res_or WHEN ((ctrl(0) AND NOT(ctrl(1)) AND NOT(ctrl(2))) = '1') ELSE
     res_and;
  res_ornot <= (a OR NOT(b));
  res_andnot <= (a AND NOT(b));
  res_or <= (a OR b);
  res_and <= (a AND b);
  res_sub <= rtlsum_0;
  res_add <= rtlsum_1;
END VBE;
